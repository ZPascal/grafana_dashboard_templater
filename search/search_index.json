{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Grafana Dashboard Templater","text":"<p>The Grafana dashboard templater create a valid Grafana dashboard as dictionary based on a template and injected values.</p>"},{"location":"#dashboard-template-folder-structure","title":"Dashboard template folder structure","text":"<pre><code>dashboard-templates &lt;- Folder of the dashboard templates\n     database &lt;- Dashboard type\n        postgresql &lt;- Dashboard name\n            v13 &lt;- Dashboard version\n                dashboard.json.sample &lt;- Dashboard template\n</code></pre>"},{"location":"#installation","title":"Installation","text":"<p><code>pip install grafana-dashboard-templater</code></p>"},{"location":"#example","title":"Example","text":"<pre><code>from grafana_dashboard.model import Model\nfrom grafana_dashboard.dashboard import Dashboard\n\ndashboard_model: Model = Model(dashboard_templates_path=\"./dashboard-templates\", dashboard_type=\"database\",\n                               dashboard_name=\"postgresql\", dashboard_version=\"v13\")\n\ndashboard: Dashboard = Dashboard(dashboard_model)\ndashboard_json = dashboard.get_dashboard_json(template_values={\"app_name\": \"PostgreSQL\", \"prometheus_name\": \"k8s-sonarqube-postgresql\"})\n</code></pre>"},{"location":"#grafana-api-sdk","title":"Grafana API SDK","text":"<p>If you want to establish a connection to Grafana API via an SDK you can check out one of my other project and integrate the functionality inside your code.</p>"},{"location":"grafana_dashboard_templater/dashboard/","title":"Table of Contents","text":"<ul> <li>grafana_dashboard.dashboard</li> <li>Dashboard<ul> <li>get_dashboard_json</li> </ul> </li> </ul>"},{"location":"grafana_dashboard_templater/dashboard/#grafana_dashboarddashboard","title":"grafana_dashboard.dashboard","text":""},{"location":"grafana_dashboard_templater/dashboard/#dashboard-objects","title":"Dashboard Objects","text":"<pre><code>class Dashboard()\n</code></pre> <p>The class includes all necessary methods to template the selected dashboard and return it as a dict</p> <p>Arguments:</p> <ul> <li><code>dashboard_model</code> Model - Inject a dashboard object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>dashboard_model</code> Model - This is where we store the model</li> <li><code>logging</code> logging.Logger - This is where we store the logger</li> </ul> <p></p>"},{"location":"grafana_dashboard_templater/dashboard/#get_dashboard_json","title":"get_dashboard_json","text":"<pre><code>def get_dashboard_json(template_values: Dict) -&gt; Dict\n</code></pre> <p>The method includes a functionality to template the selected dashboard and return the corresponding dashboard as dictionary</p> <p>Arguments:</p> <ul> <li><code>template_values</code> Dict - Specify the inserted templating values as dict</li> </ul> <p>Raises:</p> <ul> <li><code>jinja2.TemplateNotFound</code> - Jinja2 template not found</li> </ul> <p>Returns:</p> <ul> <li><code>json_dashboard</code> Dict - Returns the dashboard as dict</li> </ul>"},{"location":"grafana_dashboard_templater/model/","title":"Table of Contents","text":"<ul> <li>grafana_dashboard.model</li> <li>Model</li> </ul>"},{"location":"grafana_dashboard_templater/model/#grafana_dashboardmodel","title":"grafana_dashboard.model","text":""},{"location":"grafana_dashboard_templater/model/#model-objects","title":"Model Objects","text":"<pre><code>class Model()\n</code></pre> <p>The class includes all necessary variables to specify a query for the datasource search endpoint</p> <p>Arguments:</p> <ul> <li><code>dashboard_templates_path</code> str - Specify the template path for all dashboard's (default None)</li> <li><code>dashboard_type</code> str - Specify the dashboard type e.g. database (default None)</li> <li><code>dashboard_name</code> str - Specify the dashboard name e.g. postgres (default None)</li> <li><code>dashboard_version</code> str - Specify the dashboard version e.g. v13 (default None)</li> </ul>"}]}